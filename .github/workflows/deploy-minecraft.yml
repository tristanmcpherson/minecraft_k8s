name: Deploy Minecraft Server

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        lfs: true
    
    - name: Extract Minecraft server files
      run: |
        # Find the first zip file in the minecraft_server directory
        ZIPFILE=$(find minecraft_server -name "*.zip" | head -n 1)
        
        if [ -z "$ZIPFILE" ]; then
          echo "No zip file found in minecraft_server directory"
          exit 1
        fi
        
        echo "Found zip file: $ZIPFILE"
        
        # Create directory for extracted files
        mkdir -p server_files
        
        # Extract the zip file
        unzip "$ZIPFILE" -d server_files
        
        echo "Server files extracted successfully"
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ghcr.io/${{ github.repository_owner }}/minecraft-server:${{ github.sha }}
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
    
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config
    
    - name: Update Kubernetes deployment
      run: |
        export REGISTRY_URL=ghcr.io/${{ github.repository_owner }}
        export IMAGE_TAG=${{ github.sha }}
        export DEPLOYMENT_NAME=$(jq -r '.deployment.name' config.json)
        
        # Replace variables in all Kubernetes files
        for file in k8s/*.yaml; do
          envsubst < $file > ${file}.updated
          mv ${file}.updated $file
        done
        
        # Apply Kubernetes configurations
        kubectl apply -f k8s/ 